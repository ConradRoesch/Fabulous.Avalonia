name: Release
on:
  push:
    tags: ['[0-9]+.[0-9]+.[0-9]+', '[0-9]+.[0-9]+.[0-9]+-pre[0-9]+']
    paths-ignore: [ 'docs/**' ]

permissions: write-all

env:
  CONFIG: Release
  SLN_FILE: Fabulous.Avalonia.NoSamples.sln
  MAIN_PROJ: src/Fabulous.Avalonia/Fabulous.Avalonia.fsproj
  ITEMSREPEATER_PROJ: src/Fabulous.Avalonia/Fabulous.Avalonia.fsproj
  TEMPLATE_PROJ: templates/Fabulous.Avalonia.Templates.proj

jobs:
  release:
    runs-on: macos-13
    environment: nuget
    steps:
    - name: Checkout sources
      uses: actions/checkout@v3
    - name: Extract version from tag
      uses: damienaicheh/extract-version-from-tag-action@v1.0.0
    - name: Set release version
      run: |
        if [ "${PRE_RELEASE}" == "" ]; then
          RELEASE_VERSION=${MAJOR}.${MINOR}.${PATCH}
        else
          RELEASE_VERSION=${MAJOR}.${MINOR}.${PATCH}-${PRE_RELEASE}
        fi
        echo "Release version is $RELEASE_VERSION"
        echo "RELEASE_VERSION=$RELEASE_VERSION" >> "$GITHUB_ENV"
    - name: Get Fabulous.Avalonia Changelog Entry
      id: fabulous_changelog
      uses: mindsers/changelog-reader-action@v2
      with:
        validation_level: warn
        version: '${{ env.RELEASE_VERSION }}'
        path: src/Fabulous.Avalonia/CHANGELOG.md
    - name: Get Fabulous.Avalonia.ItemsRepeater Changelog Entry
      id: itemsrepeater_changelog
      uses: mindsers/changelog-reader-action@v2
      with:
        validation_level: warn
        version: '${{ env.RELEASE_VERSION }}'
        path: src/Fabulous.Avalonia.ItemsRepeater/CHANGELOG.md
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Install dotnet workload
      run: dotnet workload restore
    - name: Restore
      run: dotnet restore ${SLN_FILE}
    - name: Build
      run: dotnet build ${SLN_FILE} -p:Version=${RELEASE_VERSION} -c ${CONFIG} --no-restore
    - name: Test
      run: dotnet test ${SLN_FILE} -p:Version=${RELEASE_VERSION} -c ${CONFIG} --no-build
    - name: Pack
      run: |
        find templates -type f -name template.json | xargs sed -i bak "s/PKG_VERSION/${RELEASE_VERSION}/g"
        dotnet pack --project ${MAIN_PROJ} -p:Version=${RELEASE_VERSION} -p:PackageReleaseNotes="${{ steps.fabulous_changelog.outputs.changes }}" -c ${CONFIG} --property PackageOutputPath=${PWD}/nupkgs
        dotnet pack --project ${ITEMSREPEATER_PROJ} -p:Version=${RELEASE_VERSION} -p:PackageReleaseNotes="${{ steps.itemsrepeater_changelog.outputs.changes }}" -c ${CONFIG} --property PackageOutputPath=${PWD}/nupkgs
        dotnet pack ${TEMPLATE_PROJ} -p:Version=${RELEASE_VERSION} -c ${CONFIG} --property PackageOutputPath=${PWD}/nupkgs
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Packages
        path: nupkgs/
    - name: Push
      run: dotnet nuget push "nupkgs/*" -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_TOKEN }} --skip-duplicate